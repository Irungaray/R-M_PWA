{"version":3,"sources":["context/ThemeContext.js","components/Header.jsx","hooks/useCharacters.js","components/Search.jsx","components/Characters.jsx","App.js","index.js"],"names":["ThemeContext","React","createContext","Header","props","color","useContext","className","style","type","onClick","darkMode","useCharacters","url","useState","characters","setCharacters","useEffect","fetch","then","response","json","data","results","catch","error","console","warn","Search","search","searchInput","handleSearch","value","onChange","ref","placeholder","initialState","favorites","favoriteReducer","state","action","payload","filter","favorite","Characters","useReducer","dispatch","setSearch","useRef","handleFavorite","isCharacterInFavorites","find","character","id","useCallback","current","filteredUsers","useMemo","user","name","toLowerCase","includes","delIcon","log","length","map","src","alt","image","species","gender","origin","App","setDarkMode","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.3c9009fe.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ThemeContext = React.createContext(null);\n\nexport default ThemeContext;\n","import React, { useContext } from \"react\";\n\nimport ThemeContext from \"../context/ThemeContext\";\n\nimport \"./styles/Header.css\";\n\nconst Header = (props) => {\n  const color = useContext(ThemeContext);\n\n  return (\n    <div className=\"Header\">\n      <h1 style={{ color }}>Rick and Morty - The PWA</h1>\n      <button\n        type=\"button\"\n        onClick={() => props.onClick()}\n        className=\"DarkModeButton\"\n      >\n        {props.darkMode ? \"Set Ligth Mode\" : \"Set Dark Mode\"}\n      </button>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useState, useEffect } from 'react';\r\n\r\nconst useCharacters = url => {\r\n    const [ characters, setCharacters ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => setCharacters(data.results))\r\n            .catch((error) => console.warn(\"Error in fetch:\", error))\r\n    }, [url]);\r\n\r\n    return characters;\r\n};\r\n\r\nexport default useCharacters;","import React from \"react\";\r\n\r\nconst Search = ({ search, searchInput, handleSearch }) => {\r\n  return (\r\n    <div className=\"Search\">\r\n      <h2>And here you can search for a specific character!</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={search}\r\n        onChange={handleSearch}\r\n        ref={searchInput}\r\n        placeholder=\"Just type and see the magic...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, {\n  useState,\n  useReducer,\n  useMemo,\n  useRef,\n  useCallback\n} from \"react\";\n\nimport useCharacters from \"../hooks/useCharacters\";\n\nimport Search from \"./Search\";\n\nimport \"./styles/Characters.css\";\n\nconst initialState = {\n  favorites: [],\n};\n\nconst API = \"https://rickandmortyapi.com/api/character\"\n\nconst favoriteReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_FAVORITE\":\n      return {\n        ...state,\n        favorites: [...state.favorites, action.payload],\n      };\n\n    case \"REMOVE_FROM_FAVORITE\":\n      return {\n        ...state,\n        favorites: [\n          ...state.favorites.filter((favorite) => favorite !== action.payload),\n        ],\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Characters = () => {\n  const [favorites, dispatch] = useReducer(favoriteReducer, initialState);\n  const [search, setSearch] = useState('');\n  const searchInput = useRef(null);\n\n  const characters = useCharacters(API)\n\n  const handleFavorite = (favorite) => {\n    dispatch({\n      type: !!isCharacterInFavorites(favorite)\n        ? \"REMOVE_FROM_FAVORITE\"\n        : \"ADD_TO_FAVORITE\",\n      payload: favorite,\n    });\n  };\n\n  const isCharacterInFavorites = (favorite) =>\n    favorites.favorites.find((character) => character.id === favorite.id);\n\n  // Search without useCallback\n  // const handleSearch = () => {\n  //   setSearch(searchInput.current.value)\n  // };\n\n  const handleSearch = useCallback(() => {\n    setSearch(searchInput.current.value)\n  }, [])\n\n  // Search without useMemo Hook\n  // const filteredUsers = characters.filter((user) => {\n  //   return user.name.toLowerCase().includes(search.toLowerCase())\n  // });\n  const filteredUsers = useMemo(() =>\n    characters.filter((user) => {\n      return user.name.toLowerCase().includes(search.toLowerCase());\n    }),\n    [characters, search]\n  );\n\n  var favIcon =\n    \"https://icons.iconarchive.com/icons/hopstarter/soft-scraps/256/Button-Favorite-icon.png\";\n  var delIcon =\n    \"https://uxwing.com/wp-content/themes/uxwing/download/01-user_interface/red-x.png\";\n  console.log(\"Favorites: \", favorites);\n\n  return (\n    <>\n      <div className=\"Favorites\">\n        <h2>\n          {favorites.favorites.length === 0\n            ? \"Click the Star icon to add your favorites characters here!\"\n            : \"Favorites:\"}\n        </h2>\n\n        {favorites.favorites.map((favorite) => (\n          <li key={favorite.id} className=\"FavList\">\n            <button type=\"button\" onClick={() => handleFavorite(favorite)}>\n              <img src={delIcon} alt=\"\" className=\"Icon delete\" />\n            </button>\n            {favorite.name}\n          </li>\n        ))}\n      </div>\n\n      <Search\n        search={search}\n        searchInput={searchInput}\n        handleSearch={handleSearch}\n      />\n\n      <div className=\"Characters\">\n        {filteredUsers.map((character) => (\n          <div className=\"Character\" key={character.id}>\n            <h2> {character.name} </h2>\n\n            <img src={character.image} alt=\"Character\" />\n\n            <h4> Type: {character.species} </h4>\n            <h4> Gender: {character.gender} </h4>\n            <h4> Origin: {character.origin.name} </h4>\n\n            <button type=\"button\" onClick={() => handleFavorite(character)}>\n              <img\n                className=\"Icon\"\n                src={!!isCharacterInFavorites(character) ? delIcon : favIcon}\n                alt=\"\"\n              />\n            </button>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Characters;\n","import React, { useState } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Characters from \"./components/Characters\";\n\nimport \"./styles/App.css\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n\n  return (\n    <div className={darkMode ? \"App DarkMode\" : \"App LigthMode\"}>\n      <Header darkMode={darkMode} onClick={() => setDarkMode(!darkMode)} />\n\n      <Characters />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport ThemeContext from \"./context/ThemeContext\";\n\nimport App from \"./App\";\n\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeContext.Provider value=\"blackish\">\n      <App />\n    </ThemeContext.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}